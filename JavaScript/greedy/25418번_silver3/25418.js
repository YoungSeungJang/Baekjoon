/* 
입력으로 양의 정수 A와 K가 주어지면, 아래 연산을 이용하여 A를 K로 변경하려고 한다. 정수 A를 변경할 때 사용할 수 있는 연산 종류는 다음과 같다.

연산 1: 정수 A에 1을 더한다.
연산 2: 정수 A에 2를 곱한다.
정수 A를 정수 K로 만들기 위해 필요한 최소 연산 횟수를 출력하자.

입력
첫 번째 줄에 양의 정수 A와 K가 빈칸을 사이에 두고 순서대로 주어진다.

출력
첫 번째 줄에 양의 정수 A를 양의 정수 K로 만들기 위해 필요한 최소 연산 횟수를 출력한다.

제한
1 ≤ A < K ≤ 1,000,000

예제 입력 1 
5 10
예제 출력 1 
1
5(A), 10(연산 2)가 최소 연산이므로 정답은 1이다.

예제 입력 2 
7 77
예제 출력 2 
7
7(A), 8(연산 1), 9(연산 1), 18(연산 2), 19(연산 1), 38(연산 2), 76(연산 2), 77(연산 1)이 최소 연산이므로 정답은 7이다.

예제 입력 3 
1111 997651
예제 출력 3 
850
*/
/* 
생각

연산1은 1을 더하기, 연산2는 곱하기
최소가되려면 곱하기를 우선적으로 생각해줘야 할거같다 왜? 곱하기가 수의 증가폭이 +1 보다 크니까
그런데?? 무작정 곱하기 2를 해주면 곱하기2를하기에는 그 수를 넘어버리거나, 혹은 넘기때문에 +1만 연산을 해주다보면 당연히 최소값은 구할수 없다
즉 거꾸로 생각해서 k값에서 7 값이 되기위해 2를 나누어가고, -1을 해주면서 a값에 도달하면 그게곧 최소값이 될 것이다.
*/

let input = 7;
let result = 77;
let count = 0;


while(result != input){
    // 짝수일때, 그리고 2를 나눴을때 input값보다 클경우에만 실행
    if(result % 2 == 0 && result / 2 > input){
        result = result / 2;
    } else {
        result--;
    }
    count++;
}

console.log(count);